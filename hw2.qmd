---
title: "Climate Projections"
author: "Natalie Smith & Madi Calbert"
format: 
  html:
    code-fold: true
    toc: true
    number-sections: true
    embed-resources: true
theme: Litera
editor: visual
execute:
  echo: true
  message: false
  warning: false
---

```{r}
#| message: false
#| warning: false


#setup

#load libraries:
library(lubridate)
library(ggplot2)
library(tidyverse)
library(chron)
library(ncdf4)
library(RColorBrewer)
library(lattice)
library(abind)
library(here)
```

# Introduction

For this exercise, we selected the canESM5 and MIROC6 climate models under two future emissions scenarios: SSP1-2.6 and SSP5-8.5. The canESM5 model was selected based on its use in a provided example, while MIROC6 was chosen due to prior familiarity. Monthly surface temperature data for each model and scenario were then loaded for analysis.

The data used in this analysis were obtained from the Earth System Grid Federation (ESGF) and are part of the Coupled Model Intercomparison Project Phase 6 (CMIP6). The data files contain monthly surface temperature projections for the years 2015 to 2100 under the SSP1-2.6 and SSP5-8.5 scenarios. The SSP1-2.6 scenario represents a low-emission pathway, while the SSP5-8.5 scenario represents a high-emission pathway. The data were downloaded from the ESGF and are in NetCDF format, which is commonly used for climate model output.

For this analysis, we selected Southern California as our region of interest. This area is characterized by a Mediterranean climate, with warm, dry summers and mild, wet winters. The region is known for its diverse ecosystems, including coastal areas, mountains, and deserts. Future climate impacts in Southern California are expected to include increased temperatures, prolonged droughts, and more frequent and intense heatwaves and wildfires. These changes could have significant implications for water resources, agriculture, and public health.

::: {style="display: flex; gap: 1em; align-items: flex-start;"}
<img src="images/socal_map.jpg" width="2.8in"/> <img src="images/socal.jpg" width="5.55in"/>
:::

# Data Wrangling

Here we load in the data and extract the relevant variables. The data is in NetCDF format so we will extract the temperature variable ('tas') and the latitude and longitude coordinates from the NetCDF files. We will also convert the time variable to a more usable format.

```{r}
#| message: false
#| warning: false
#| output: false 

#path and filename for data

#CanESM5 SSP126:
CAN_126 <- here("data", "tas_Amon_CanESM5_ssp126_r19i1p2f1_gn_201501-210012.nc")
tas <- "tas"  # this is the name of the variable you want to look at

CAN_126 <- nc_open(CAN_126)
print(CAN_126)

# ------------------- CAN_ESM5 585 ------------------- 
CAN_585 <- here("data", "tas_Amon_CanESM5_ssp585_r15i1p1f1_gn_201501-210012.nc")
tas <- "tas"  # this is the name of the variable you want to look at

CAN_585 <- nc_open(CAN_585)
print(CAN_585)

#--------

#MIROC6 SSP126:
MIROC_126 <- here("data", "tas_Amon_MIROC6_ssp126_r3i1p1f1_gn_201501-210012.nc")
tas <- "tas"  # this is the name of the variable you want to look at

MIROC_126 <- nc_open(MIROC_126)
print(MIROC_126)

#MIROC6 SSP585:
MIROC_585 <- here("data", "tas_Amon_MIROC6_ssp585_r1i1p1f1_gn_201501-210012.nc")
tas <- "tas"  # this is the name of the variable you want to look at

MIROC_585  <- nc_open(MIROC_585 )
print(MIROC_585 )

```

```{r}
#| message: false
#| warning: false
#| output: false 

# "actually read in the data" using ncvar_get; from the data get latitude and longitude

# ------------------- CAN_126 ------------------- 
lon <- ncvar_get(CAN_126 ,"lon") #longitude
nlon <- dim(lon) #sets dimensions of object
lat <- ncvar_get(CAN_126,"lat") #latitude
nlat <- dim(lat) #sets dimensions of object

head(lat)
head(lon)

# ------------------- CAN_585 ------------------- 
lon_c585 <- ncvar_get(CAN_585,"lon") #longitude
nlon_c585 <- dim(lon_c585) #sets dimensions of object
lat_c585 <- ncvar_get(CAN_585,"lat") #latitude
nlat_c585 <- dim(lat_c585) #sets dimensions of object

head(lat_c585)
head(lon_c585)

# ------------------- MIROC_126 -------------------
lon_M126 <- ncvar_get(MIROC_126,"lon") #longitude
nlon_M126 <- dim(lon_M126) #sets dimensions of object
lat_M126 <- ncvar_get(MIROC_126,"lat") #latitude
nlat_M126 <- dim(lat_M126) #sets dimensions of object

head(lat_M126)
head(lon_M126)

# ------------------- MIROC_585 -------------------
lon_M585 <- ncvar_get(MIROC_585,"lon") #longitude
nlon_M585 <- dim(lon_M585) #sets dimensions of object
lat_M585 <- ncvar_get(MIROC_585,"lat") #latitude
nlat_M585 <- dim(lat_M585) #sets dimensions of object

head(lat_M585)
head(lon_M585)

```

```{r}
#| message: false
#| warning: false
#| output: false 

# from the data get time

# ------------------- CAN_126 ------------------- 
time <- ncvar_get(CAN_126,"time")
tunits <- ncatt_get(CAN_126,"time","units") 
nt <- dim(time)

#print(tunits)
#$hasatt [1] TRUE
#$value [1] "days since 1850-01-01 0:0:0.0"
#They are counted since the date January 1, 1850 at midnight (0:0:0.0)


# ------------------- CAN_585 ------------------- 
time_c585 <- ncvar_get(CAN_585,"time")
tunits_c585 <- ncatt_get(CAN_585,"time","units") 
nt_c585 <- dim(time_c585)

#print(tunits_c585)

# ------------------- MIROC_126 -------------------
time_M126 <- ncvar_get(MIROC_126,"time")
tunits_M126 <- ncatt_get(MIROC_126,"time","units") 
nt_M126 <- dim(time_M126)

#print(tunits_M126)

# ------------------- MIROC_585 -------------------
time_M585 <- ncvar_get(MIROC_585,"time")
tunits_M585 <- ncatt_get(MIROC_585,"time","units") 
nt_M585 <- dim(time_M585)

#print(tunits_M585)

```

```{r}
#| message: false
#| warning: false
#| output: false 

# split into parts 

# ------------------- CAN_126 ------------------- 
tustr <- strsplit(tunits$value, " ") 
tdstr <- strsplit(unlist(tustr)[3], "-")
tmonth <- as.integer(unlist(tdstr)[2])
tday <- as.integer(unlist(tdstr)[3])
tyear <- as.integer(unlist(tdstr)[1])
rtime_canesm5 <- chron(time,origin=c(tmonth, tday, tyear)) #chronological order

# ------------------- CAN_585 ------------------- 
tustr_c585 <- strsplit(tunits_c585$value, " ") 
tdstr_c585 <- strsplit(unlist(tustr_c585)[3], "-")
tmonth_c585 <- as.integer(unlist(tdstr_c585)[2])
tday_c585 <- as.integer(unlist(tdstr_c585)[3])
tyear_c585 <- as.integer(unlist(tdstr_c585)[1])
rtime_c585 <- chron(time_c585,origin=c(tmonth_c585, tday_c585, tyear_c585)) #chronological order

# ------------------- MIROC_126 -------------------
tustr_M126 <- strsplit(tunits_M126$value, " ") 
tdstr_M126 <- strsplit(unlist(tustr_M126)[3], "-")
tmonth_M126 <- as.integer(unlist(tdstr_M126)[2])
tday_M126 <- as.integer(unlist(tdstr_M126)[3])
tyear_M126 <- as.integer(unlist(tdstr_M126)[1])
rtime_M126 <- chron(time_M126,origin=c(tmonth_M126, tday_M126, tyear_M126)) #chronological order

# ------------------- MIROC_585 -------------------
tustr_M585 <- strsplit(tunits_M585$value, " ") 
tdstr_M585 <- strsplit(unlist(tustr_M585)[3], "-")
tmonth_M585 <- as.integer(unlist(tdstr_M585)[2])
tday_M585 <- as.integer(unlist(tdstr_M585)[3])
tyear_M585 <- as.integer(unlist(tdstr_M585)[1])
rtime_M585 <- chron(time_M585,origin=c(tmonth_M585, tday_M585, tyear_M585)) #chronological order

```

```{r}
#| message: false
#| warning: false
#| output: false 

# ------------------- CAN_126 ------------------- 
# read in the temperature data: 
TS <- ncvar_get(CAN_126, "tas") # get the surface temp variable
dlname <- ncatt_get(CAN_126,tas,"long_name") # get the long name of the variable (tas)
dunits<- ncatt_get(CAN_126,tas,"units") # get the units of tas
fillvalue <- ncatt_get(CAN_126,tas,"_FillValue") # get the fill value --> value used to fill in values where there is no data

# ------------------- CAN_585 ------------------- 
TS_c585 <- ncvar_get(CAN_585, "tas") # get the surface temp variable
dlname_c585 <- ncatt_get(CAN_585,tas,"long_name") # get the long name of the variable (tas)
dunits_c585 <- ncatt_get(CAN_585,tas,"units") # get the units of tas
fillvalue_c585 <- ncatt_get(CAN_585,tas,"_FillValue") # get the fill value --> value used to fill in values where there is no data

# ------------------- MIROC_126 -------------------
TS_M126 <- ncvar_get(MIROC_126, "tas") # get the surface temp variable
dlname_M126 <- ncatt_get(MIROC_126,tas,"long_name") # get the long name of the variable (tas)
dunits_M126 <- ncatt_get(MIROC_126,tas,"units") # get the units of tas
fillvalue_M126 <- ncatt_get(MIROC_126,tas,"_FillValue") # get the fill value --> value used to fill in values where there is no data

# ------------------- MIROC_585 -------------------
TS_M585 <- ncvar_get(MIROC_585, "tas") # get the surface temp variable
dlname_M585 <- ncatt_get(MIROC_585,tas,"long_name") # get the long name of the variable (tas)
dunits_M585 <- ncatt_get(MIROC_585,tas,"units") # get the units of tas
fillvalue_M585 <- ncatt_get(MIROC_585,tas,"_FillValue") # get the fill value --> value used to fill in values where there is no data

```

# Results

## Mapping

Heatmaps are used to visualize the temperature data for each model and scenario. The maps show the temperature distribution across the globe, with color gradients representing different temperature ranges for each model and each scenario. The maps highlight the largest temperature increases in the CanESM5 model under the SSP585 scenario, with the highest temperatures concentrated in the tropics and subtropics (Figure 1). The MIROC6 model shows a more moderate temperature increase, with less pronounced warming in the tropics. The maps also reveal regional differences in temperature projections, with some areas experiencing more significant warming than others.

```{r}
#| fig.cap: "**Figure 1: Heatmaps of temperature data.** The maps show the temperature distribution across the globe, with color gradients representing different temperature ranges for each model and each scenario. The color scale is consistent across all maps, allowing for direct comparison of temperature distributions."


# process temperature data 
# lat x lon x time

# ------------------- CAN_126 ------------------- 
month <- 1 # month (January)
tmp_slice <- TS[,,month]-273.15 # convert Kelvin to Celsius

# levelplot (heatmap) of the slice
grid <- expand.grid(lon=lon, lat=lat) #values for lon (longitude) and lat (latitude) and creates a data frame (or tibble)
cutpts <- c(-50,-40,-30,-20,-10,0,10,20,30,40,50) #vector defines cut points for the color scale in the plot
map1 <- levelplot(tmp_slice ~ lon * lat, 
                  data=grid, 
                  at=cutpts, 
                  cuts=11, 
                  pretty=T,
                  col.regions=(rev(brewer.pal(10,"RdBu"))),
                  xlab = "Longitude",
                  ylab = "Latitude",
                  main = "CanESM5 SSP126")

# ------------------- CAN_585 ------------------- 
month <- 1 # month (January)
tmp_slice_c585 <- TS_c585[,,month]-273.15 # convert Kelvin to Celsius

# levelplot (heatmap) of the slice
grid_c585 <- expand.grid(lon=lon_c585, lat=lat_c585) #values for lon (longitude) and lat (latitude) and creates a data frame (or tibble)
cutpts_c585 <- c(-50,-40,-30,-20,-10,0,10,20,30,40,50) #vector defines cut points for the color scale in the plot
map2 <- levelplot(tmp_slice_c585 ~ lon * lat, 
                  data=grid_c585, at=cutpts_c585, cuts=11, pretty=T,
                  col.regions=(rev(brewer.pal(10,"RdBu"))),
                  xlab = "Longitude",
                  ylab = "Latitude",
                  main = "CanESM5 SSP585")


# ------------------- MIROC_126 -------------------
month <- 1 # month (January)
tmp_slice <- TS_M126[,,month]-273.15 # convert Kelvin to Celsius

# levelplot (heatmap) of the slice
grid_M126 <- expand.grid(lon=lon_M126, lat=lat_M126) #values for lon (longitude) and lat (latitude) and creates a data frame (or tibble)
cutpts_M126 <- c(-50,-40,-30,-20,-10,0,10,20,30,40,50) #vector defines cut points for the color scale in the plot
map3 <- levelplot(tmp_slice ~ lon * lat, 
                  data=grid_M126, at=cutpts_M126, cuts=11, pretty=T,
                  col.regions=(rev(brewer.pal(10,"RdBu"))),
                  xlab = "Longitude",
                  ylab = "Latitude",
                  main = "MIROC6 SSP126")

# ------------------- MIROC_585 -------------------
month <- 1 # month (January)
tmp_slice <- TS_M585[,,month]-273.15 # convert Kelvin to Celsius

# levelplot (heatmap) of the slice
grid_M585 <- expand.grid(lon=lon_M585, lat=lat_M585) #values for lon (longitude) and lat (latitude) and creates a data frame (or tibble)
cutpts_M585 <- c(-50,-40,-30,-20,-10,0,10,20,30,40,50) #vector defines cut points for the color scale in the plot
map4 <- levelplot(tmp_slice ~ lon * lat, 
                  data=grid_M585, at=cutpts_M585, cuts=11, pretty=T,
                  col.regions=(rev(brewer.pal(10,"RdBu"))),
                  xlab = "Longitude",
                  ylab = "Latitude",
                  main = "MIROC6 SSP585")


# plot the maps together
library(gridExtra)

grid.arrange(map1, map2, map3, map4, 
             ncol = 2)

```

## Time Series Analysis

```{r}
#| fig.cap: "**Figure 2: Time series of temperature data for Southern California from 2015 to 2100.** The plots show the average temperature for each year, with a linear regression line indicating the trend over time. The y-axis represents temperature in degrees Celsius, and the x-axis represents the year."


# time series of regionally averaged data 

# ------------------- CAN_126 ------------------- 

# southern california lat/lon
lats=which(lat >= 32 & lat <= 35)
lons=which(lon >= 241 & lon <= 245)

# average over all values corresponding to each time over the region
tsavg_canesm5 <- apply(TS [lons,lats,],3,mean) # 3 = dimension over which to apply mean; 3 is for time

# plot the time series
clim <- data.frame(time=rtime_canesm5, tsavg_canesm5=tsavg_canesm5) 
yrclim = clim %>% group_by(year(rtime_canesm5)) %>% summarize(Tann=mean(tsavg_canesm5)) #group by year, and summarize to show annual average temperature
yrclim$dt = unique(year(rtime_canesm5)) #create a new column with the unique years

#plot the time series: 
c126_plot <- ggplot(yrclim, aes(x = dt, y = Tann - 273.15)) +
  geom_point()+
  geom_smooth(method = "lm",color = "darkred") +
  labs(
    y = "Temperature (°C)",
    x = "Year",
    subtitle = "CanESM5 SSP126"
  ) +
  theme_minimal()

# ------------------- CAN_585 ------------------- 
# southern california lat/lon
lats=which(lat >= 32 & lat <= 35)
lons=which(lon >= 241 & lon <= 245)

# average over all values corresponding to each time over the region
tsavg_canesm5 <- apply(TS_c585[lons,lats,],3,mean) # 3 = dimension over which to apply mean; 3 is for time

# plot the time series
clim <- data.frame(time=rtime_c585, tsavg_canesm5=tsavg_canesm5) 
yrclim_c585 = clim %>% group_by(year(rtime_c585 )) %>% summarize(Tann=mean(tsavg_canesm5)) #group by year, and summarize to show annual average temperature
yrclim_c585$dt = unique(year(rtime_c585)) #create a new column with the unique years

#plot the time series: 
c585_plot <- ggplot(yrclim_c585, aes(x = dt, y = Tann - 273.15)) +
  geom_point() +
  geom_smooth(method = "lm",color = "darkred") +
  labs(
    y = "Temperature (°C)",
    x = "Year",
    subtitle = "CanESM5 SSP585"
  ) +
  theme_minimal()

# ------------------- MIROC_126 -------------------
# southern california lat/lon
lats=which(lat_M126 >= 32 & lat_M126 <= 35)
lons=which(lon_M126 >= 241 & lon_M126 <= 245)

# average over all values corresponding to each time over the region
tsavg_M126 <- apply(TS_M126[lons,lats,],3,mean) # 3 = dimension over which to apply mean; 3 is for time

# plot the time series
clim <- data.frame(time=rtime_M126, tsavg_M126=tsavg_M126) 
yrclim_M126 = clim %>% group_by(year(rtime_M126)) %>% summarize(Tann=mean(tsavg_M126)) #group by year, and summarize to show annual average temperature
yrclim_M126$dt = unique(year(rtime_M126)) #create a new column with the unique years

#plot the time series: 
m126_plot <- ggplot(yrclim_M126, aes(x = dt, y = Tann - 273.15)) +
  geom_point() +
  geom_smooth(method = "lm",color = "darkred") +
  labs(
    y = "Temperature (°C)",
    x = "Year",
    subtitle = "MIROC6 SSP126"
  ) +
  theme_minimal()



# ------------------- MIROC_585 -------------------
# southern california lat/lon
lats=which(lat_M585 >= 32 & lat_M585 <= 35)
lons=which(lon_M585 >= 241 & lon_M585 <= 245)

# average over all values corresponding to each time over the region
tsavg_M585 <- apply(TS_M585[lons,lats,],3,mean) # 3 = dimension over which to apply mean; 3 is for time

# plot the time series
clim <- data.frame(time=rtime_M585, tsavg_M585=tsavg_M585) 
yrclim_M585 = clim %>% group_by(year(rtime_M585)) %>% summarize(Tann=mean(tsavg_M585)) #group by year, and summarize to show annual average temperature
yrclim_M585$dt = unique(year(rtime_M585)) #create a new column with the unique years

#plot the time series: 
m585_plot <- ggplot(yrclim_M585, aes(x = dt, y = Tann - 273.15)) +
  geom_point() +
  geom_smooth(method = "lm",color = "darkred") +
  labs(
    y = "Temperature (°C)",
    x = "Year",
    subtitle = "MIROC6 SSP585"
  ) +
  theme_minimal()


#patchwork plots together
library(patchwork)
combined_plot <- (c126_plot + c585_plot + m126_plot + m585_plot) + 
  plot_layout(ncol = 2) +
  plot_annotation(
    title = "Southern California Temperature Projections",
    theme = theme(
      plot.title = element_text(size = 20, face = "bold", hjust = 0.5) 
    ))

combined_plot
```

The temperature trends over the 21st century (2015–2100) show consistent warming across all models and scenarios, with varying magnitudes (Figure 2). The estimated slopes from linear models represent the rate of temperature increase per year, and the total projected (slope x number of years) warming by 2100 is also provided:

-   **CanESM5 SSP126:** approximately 0.0240 °C per year (p = 2.95 × 10⁻⁶), total warming ≈ 2.0 °C by 2100.

-   **CanESM5 SSP585**: approximately 0.0903 °C per year (p \< 2 × 10⁻¹⁶), total warming ≈ 7.7 °C by 2100.

-   **MIROC6 SSP126:** approximately 0.0093 °C per year (p = 0.00060), total warming ≈ 0.8 °C by 2100.

-   **MIROC6 SSP585**: approximately 0.0541 °C per year (p \< 2 × 10⁻¹⁶), total warming ≈ 4.6 °C by 2100.

All models exhibit positive slopes, indicating statistically significant warming trends through the end of the century. The warming is more pronounced under higher-emissions scenarios (SSP5-8.5), with total projected warming ranging from 0.8 °C to 7.7 °C by 2100.

```{r}
#| message: false
#| warning: false
#| output: false 

#trend estimates
#CanESM5 SSP126
model <- lm(Tann ~ dt, data = yrclim)
summary(model) #slope = 2.455e+02

#CanESM5 SSP585
model_c585 <- lm(Tann ~ dt, data = yrclim_c585)
summary(model_c585) #slope = 1.110e+02

#MIROC6 SSP126
model_M126 <- lm(Tann ~ dt, data = yrclim_M126)
summary(model_M126) #slope = 2.790e+02

#MIROC6 SSP585
model_M585 <- lm(Tann ~ dt, data = yrclim_M585)
summary(model_M585) #slope = 1.879e+02
```

```{r}
#| message: false
#| warning: false
#| output: false 

#Between different models? 
#run a t-test comparing models across SSSP126
t_test_results_SSP126 <- t.test(
  yrclim$Tann, 
  yrclim_M126$Tann, paired = FALSE, var.equal = TRUE
)
t_test_results_SSP126 #p-value < 2.2e-16

#run a t-test comparing models across SSSP585
t_test_results_SSP585 <- t.test(
  yrclim_c585$Tann, 
  yrclim_M585$Tann, paired = FALSE, var.equal = TRUE
)
t_test_results_SSP585 #p-value = 2.486e-13

#Between different scenarios?
#run a t-test comparing scenarios across MIROC models
t_test_results <- t.test(
  yrclim_M126$Tann, 
  yrclim_M585$Tann, paired = FALSE, var.equal = TRUE
)
t_test_results #p-value = 1.174e-09

#run a t-test comparing scenarios across CanESM models
t_test_results_canesm5 <- t.test(
  yrclim_c585$Tann, 
  yrclim$Tann, paired = FALSE, var.equal = TRUE
)
t_test_results_canesm5 #p-value = 1.958e-07 
```

# Discussion

When comparing the trend estimates between different models, we observe that the CanESM5 model generally predicts a higher rate of temperature increase compared to the MIROC6 model. For example, under the SSP126 scenario, CanESM5 has a slope of approximately 0.0240 °C per year, while MIROC6 has a slope of approximately 0.0093 °C per year. This indicates that CanESM5 predicts a more rapid warming trend than MIROC6 under the same emissions scenario.

When comparing different scenarios within the same model, we see that both models predict a significantly higher rate of warming under the SSP585 scenario compared to the SSP126 scenario. For instance, CanESM5 predicts a slope of approximately 0.0903 °C per year under SSP585, while MIROC6 predicts a slope of approximately 0.0541 °C per year under the same scenario. This suggests that higher emissions scenarios lead to more pronounced warming trends across both models.

The t-test results indicate that the differences in temperature projections between the two models and between the two scenarios are statistically significant. For example, the p-value for the t-test comparing CanESM5 and MIROC6 under SSP126 is less than 2.2e-16, indicating a highly significant difference in temperature projections between the two models. Similarly, the p-value for the t-test comparing SSP126 and SSP585 within the MIROC model is 1.174e-09, indicating a significant difference in temperature projections between the two scenarios.

These results highlight the importance of considering both model selection and emissions scenarios when interpreting climate projections. The choice of model can significantly influence projected temperature trends, and higher emissions scenarios are associated with more pronounced warming. This has important implications for climate change mitigation and adaptation strategies, as different models may yield different projections for future climate impacts.
